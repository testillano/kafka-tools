ARG base_os=ubuntu
ARG base_tag=latest
FROM ${base_os}:${base_tag}
MAINTAINER testillano

ARG base_os=ubuntu

LABEL testillano.kafkatools_builder.description="Docker image to build kafka tools"

WORKDIR /code/build

ARG make_procs=4
ARG build_type=Release
ARG ert_logger_ver=v1.1.0
ARG confluentinc_librdkafka_ver=v2.3.0
ARG boost_ver=1.84.0
ARG mfontanini_cppkafka_ver=v0.4.1

RUN if [ "${base_os}" = "alpine" ] ; then apk update && apk add build-base cmake wget tar linux-headers openssl-dev libev-dev openssl-libs-static zlib-static doxygen graphviz && rm -rf /var/cache/apk/* ; elif [ "${base_os}" = "ubuntu" ] ; then apt-get update && apt-get install -y wget make cmake g++ bzip2 patch libssl-dev libzstd-dev zlib1g-dev doxygen graphviz && apt-get clean ; fi

# ert_logger
RUN set -x && \
    wget https://github.com/testillano/logger/archive/${ert_logger_ver}.tar.gz && tar xvf ${ert_logger_ver}.tar.gz && cd logger-*/ && \
    cmake -DERT_LOGGER_BuildExamples=OFF -DCMAKE_BUILD_TYPE=${build_type} . && make -j${make_procs} && make install && \
    cd .. && rm -rf * && \
    set +x

# confluentinc librdkafka
RUN set -x && \
    wget https://github.com/confluentinc/librdkafka/archive/refs/tags/${confluentinc_librdkafka_ver}.tar.gz && \
    tar xvf ${confluentinc_librdkafka_ver}.tar.gz && cd librdkafka* && \
    STATIC_LIB_libzstd=/usr/lib/x86_64-linux-gnu/libzstd.a ./configure && make -j${make_procs} && make install && \
    cd .. && rm -rf * && \
    set +x

# boost
# wget https://sourceforge.net/projects/boost/files/boost/${boost_ver}/boost_$(echo ${boost_ver} | tr '.' '_').tar.gz && tar xvf boost* && cd boost*/ && \
RUN set -x && \
    wget https://boostorg.jfrog.io/artifactory/main/release/${boost_ver}/source/boost_$(echo ${boost_ver} | tr '.' '_').tar.gz && tar xvf boost* && cd boost*/ && \
    ./bootstrap.sh && ./b2 -j${make_procs} install && \
    cd .. && rm -rf * && \
    set +x

# mfontanini cppkafka
RUN set -x && \
    wget https://github.com/mfontanini/cppkafka/archive/refs/tags/${mfontanini_cppkafka_ver}.tar.gz && \
    tar xvf ${mfontanini_cppkafka_ver}.tar.gz && cd cppkafka* && \
    mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=${build_type} -DCPPKAFKA_RDKAFKA_STATIC_LIB=ON -DCPPKAFKA_BUILD_SHARED=OFF .. && \
    make -j${make_procs} && make install && \
    cd .. && rm -rf * && \
    set +x

# Build script
COPY deps/build.sh /var
RUN chmod a+x /var/build.sh

ENTRYPOINT ["/var/build.sh"]
CMD []
